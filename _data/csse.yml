# CSSE course meta data
Sprint1:
  shared: "Onboarding"
  start: 0
  end: 4
Sprint2:
  title: JavaScript Student Teaching
  description: A key focus of this course is to make Web Games using JavaScript. Understanding fundamentals like control structures, data types, input/output, operators, classes, methods and parameters, basic inheritance, and documentation practices are essentiial. Students will be teaching lessons on these topics to their peers.  Each student will be responsible for a portion of the lesson, a popcorn hack, and homework.  Students will be graded on their teaching, the popcorn hack, and the homework they assign.  Students will also be graded on their participation in learning from their peers.
  start: 5
  end: 7
Sprint3:
  title: Creating a game for N@tM
  description: Part of the process of becoming technically proficient is going beyond fundamentals by taking on a project challenge while coding. A challenge with some vision, questions, AI research, and more allow amazing things to be accomplished. Our goal is to participate in N@tM with the other CS classes and other classes from the Electives Department.  We should have a blog, progress in a game, and a series of lesson hacks to show off.
  start: 8
  end: 12
Sprint4:
  title: Planning, Tinkering, and OOP
  description: Students, in trios, will work on Game and study OOP. There will be a lot of code, some Tech Talks, and some Teaching assignments provided to learn the code.
  start: 13
  end: 16
Sprint5:
  title: Building a Help System 
  description: The Teacher will be providing topics.  All teams will be building a help system covering the key topics in the platformer game.  The task of forming a help system will help your team become expert in a topic and prepare you for final sprint.  For now, don't try to code in the Platformer game, but try to make Jupyter Notebooks with help and hacks suggestions on your topic.
  start: 17
  end: 18
Sprint6:
  title: An RPG/Platformer game.
  description: Trimester 2 concludes with students presenting their project at N@tM. Each person within "Student Teams" will have their own specialty within the student project. Students should be able to talk about design, make a plan, code, blog, and present features of their portion of the system.
  start: 19
  end: 25
